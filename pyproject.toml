[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "habrdigest"
version = "1.0.0"
description = "AI-ассистент для автоматического парсинга IT-статей с Хабра, генерации кратких резюме и отправки через Telegram-бота"
authors = [
    {name = "HabrDigest Team", email = "team@habrdigest.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    # FastAPI и веб-фреймворки
    "fastapi>=0.109.0,<0.110.0",
    "uvicorn[standard]>=0.27.0,<0.28.0",
    "pydantic>=2.5.0,<3.0.0",
    "pydantic-settings>=2.1.0,<3.0.0",
    
    # База данных
    "sqlalchemy>=2.0.23,<3.0.0",
    "alembic>=1.13.0,<2.0.0",
    "psycopg2-binary>=2.9.9,<3.0.0",
    "psycopg[binary,pool]>=3.1.0,<4.0.0",
    
    # Telegram бот (используем python-telegram-bot вместо aiogram для лучшей совместимости)
    "python-telegram-bot>=21.0,<22.0",
    
    # Парсинг
    "aiohttp>=3.9.1,<4.0.0",
    "beautifulsoup4>=4.12.2,<5.0.0",
    "html5lib>=1.1,<2.0",  # Альтернатива lxml
    
    # Yandex GPT
    "yandexcloud>=0.227.0,<1.0.0",
    
    # Очереди и фоновые задачи
    "celery>=5.3.4,<6.0.0",
    "redis>=5.0.1,<6.0.0",
    
    # Утилиты
    "python-dotenv>=1.0.0,<2.0.0",
    "httpx>=0.27.0,<0.28.0",
    "loguru>=0.7.2,<1.0.0",
    "schedule>=1.2.0,<2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3,<8.0.0",
    "pytest-asyncio>=0.21.1,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "black>=23.11.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.1.0,<7.0.0",
    "mypy>=1.7.0,<2.0.0",
]

test = [
    "pytest>=7.4.3,<8.0.0",
    "pytest-asyncio>=0.21.1,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "httpx>=0.27.0,<0.28.0",
]

asyncpg = [
    "asyncpg>=0.29.0,<1.0.0",
]

[project.urls]
Homepage = "https://github.com/zavet-g/HabrDigest"
Repository = "https://github.com/zavet-g/HabrDigest"
Documentation = "https://github.com/zavet-g/HabrDigest/docs"
Issues = "https://github.com/zavet-g/HabrDigest/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*", "celery_app*", "migrations*"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "psycopg.*",
    "asyncpg.*",
    "yandexcloud.*",
]
ignore_missing_imports = true 